<%- include('../layouts/user/userHeader') %>
<%- include('../layouts/user/userNavBar') %>

        <main class="main">
        	<div class="page-header text-center" style="background-image: url('/user/assets/images/page-header-bg.jpg')">
        		<div class="container">
        			<h1 class="page-title">Wishlist<span>Shop</span></h1>
        		</div><!-- End .container -->
        	</div><!-- End .page-header -->
            <nav aria-label="breadcrumb" class="breadcrumb-nav">
                <div class="container">
                    
                </div><!-- End .container -->
            </nav><!-- End .breadcrumb-nav -->

            <div class="page-content">
                <div class="container">
                    <table class="table table-wishlist table-mobile">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Price</th>
                                <th></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (wishlist) { %>
                                <% wishlist.products.forEach((wishlistItem) => { %>
                                    <tr>
                                        <td class="product-col">
                                            <div class="product">
                                                <figure class="product-media">
                                                    <a href="#">
                                                        <img src="/uploads/<%=wishlistItem.productId.image[0]%>" alt="Product image">
                                                    </a>
                                                </figure>
                                                <h3 class="product-title">
                                                    <a href="#"><%= wishlistItem.productId.name %></a>
                                                </h3><!-- End .product-title -->
                                            </div><!-- End .product -->
                                        </td>
                                        <td class="price-col">â‚¹<%=wishlistItem.price%></td>
                                        <td class="action-col">
                                            <button class="btn btn-block btn-outline-primary-2" onclick="addToCart('<%= wishlistItem.productId._id %>')"><i class="icon-cart-plus"></i>Add to Cart</button>

                                        </td>
                                        <td class="remove-col"><button class="btn-remove" onclick="removeFromWishlist('<%= wishlistItem.productId._id %>')"  ><i class="icon-close"></i></button></td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="5" class="text-center">No items in the wishlist.</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table><!-- End .table table-wishlist -->
                </div><!-- End .container -->
            </div><!-- End .page-content -->
        </main><!-- End .main -->
        <%- include('../layouts/user/mobileview') %>
        <%- include('../layouts/user/smallFooter') %>


<script>
    async function removeFromWishlist(productId) {
        try {
            const confirmation = await Swal.fire({
                title: 'Remove from Wishlist?',
                text: 'Are you sure you want to remove this product from your wishlist?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Yes, remove',
                cancelButtonText: 'Cancel'
            });

            if (confirmation.isConfirmed) {
                const response = await fetch("/removeFromWishlist", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ productId: productId }),
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log(result.message);

                    Swal.fire({
                        icon: 'success',
                        title: 'Product removed from wishlist!',
                        showConfirmButton: false,
                        timer: 1500
                    });

                    setTimeout(() => {
                        location.reload();
                    }, 1500);

                } else {
                    console.error("Error removing from wishlist:", response.statusText);

                    Swal.fire({
                        icon: 'error',
                        title: 'Error removing from wishlist',
                        text: 'An error occurred while removing the product from the wishlist.'
                    });
                }
            }
        } catch (error) {
            console.error("Exception:", error.message);

            Swal.fire({
                icon: 'error',
                title: 'Error removing from wishlist',
                text: 'An error occurred while removing the product from the wishlist.'
            });
        }
    }
</script>




<script>
    async function addToCart(productId) {
        try {
            const confirmation = await Swal.fire({
                title: 'Add to Cart?',
                text: 'Are you sure you want to add this product to your cart?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Yes, add to cart',
                cancelButtonText: 'Cancel'
            });

            if (confirmation.isConfirmed) {
                const response = await fetch("/addToCart/" + productId, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log(result.message);

                    Swal.fire({
                        icon: 'success',
                        title: 'Product added to cart!',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(()=>{
                        window.location.reload()
                    })
                } else {
                    console.error("Error adding to cart:", response.statusText);

                    Swal.fire({
                        icon: 'error',
                        title: 'Error adding to cart',
                        text: 'An error occurred while adding the product to the cart.'
                    });
                }
            }
        } catch (error) {
            console.error("Exception:", error.message);

            Swal.fire({
                icon: 'error',
                title: 'Error adding to cart',
                text: 'An error occurred while adding the product to the cart.'
            });
        }
    }
</script>




