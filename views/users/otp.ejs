<%- include('../layouts/user/userHeader') %>
<%- include('../layouts/user/userNavBar') %>

<style>
    .flash-message {
        padding: 10px;
        margin-bottom: 10px;
    }
    
    .error {
        background-color: #FFD2D2;
        color: #FF0000;
    }

</style>

<div class="otp-verification-page bg-image pt-8 pb-8 pt-md-12 pb-md-12 pt-lg-17 pb-lg-17" style="background-image: url(../user/assets/images/banners/countdown-begins-antique-timer-sand-flowing-endlessly-generated-by-ai.jpg)">
    <div class="container">
        <div class="form-box">
            <div class="form-tab">
                <ul class="nav nav-pills nav-fill" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="otp-verification-tab" data-toggle="tab" href="#otp-verification" role="tab" aria-controls="#otp-verification" aria-selected="true">OTP Verification</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="otp-verification" role="tabpanel" aria-labelledby="otp-verification-tab">
                        <form id="otpVerificationForm" action="/otp" method="post" onsubmit="return validateOtpForm()">
                            <% if(locals.email) { %>
                                <input type="hidden" name="email" value="<%= email %>">
                                <% } %>
                            <div class="form-group">
                                <label for="otp-code">Enter OTP *</label>
                                <input type="text" class="form-control" id="otp-code" name="Otp" required>
                            </div><!-- End .form-group -->

                            <div id="otp-timer" class="text-center"></div>

                            <div class="form-footer">
                                <button type="submit" class="btn btn-outline-primary-2">
                                    <span>VERIFY OTP</span>
                                    <i class="icon-long-arrow-right"></i>
                                </button>

                                <% if (locals.error && locals.error.length > 0) { %>
                                    <div class="flash-message error">
                                        <%= error %>
                                    </div>
                                <% } %>

                                <a href="/resendOtp?email=<%= email %>" class="resend-link">Resend OTP</a>
                            </div><!-- End .form-footer -->
                        </form>
                        <p class="text-danger"><%= otp %></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- <script>
    function getQueryParam(paramName) {
        const params = new URLSearchParams(window.location.search);
        return params.get(paramName);
    }

    document.addEventListener("DOMContentLoaded", function () {
        const timerElement = document.getElementById("otp-timer");
        const resendButton = document.querySelector(".resend-link");
        let countdown = 60; // Set the initial countdown time in seconds

        // Get the email from the URL parameters
        const email = getQueryParam('email');

        function updateTimerDisplay() {
            timerElement.textContent = `Resend OTP in ${countdown} seconds`;
        }

        function startTimer() {
            updateTimerDisplay();
            const timerInterval = setInterval(function () {
                countdown--;
                updateTimerDisplay();
                if (countdown <= 0) {
                    clearInterval(timerInterval);
                    timerElement.textContent = "Resend OTP";
                    // Enable Resend OTP button
                    resendButton.classList.remove("disabled");
                    // Update the click event listener for Resend OTP
                    resendButton.addEventListener("click", handleResendClick);
                }
            }, 1000);
        }

        function handleResendClick() {
            // Disable the Resend OTP button during the process
            resendButton.classList.add("disabled");

            // Swal.fire({
            //     icon: 'info',
            //     title: 'Sending OTP...',
            //     showConfirmButton: false,
            // });

            // Make an AJAX request to trigger the resend
            fetch("/admin/resendOtp", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ email: email }),
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    console.log(data);
                    alert('OTP has been sent successfully!');
                    // Swal.fire({
                    //     icon: 'success',
                    //     title: 'OTP Sent!',
                    //     text: 'The OTP has been successfully sent to your email.',
                    // });
                })
                .catch(error => {
                    console.error('There was a problem with the fetch operation:', error);
                });
        }

        // Initially disable the Resend OTP button
        resendButton.classList.add("disabled");

        // Call startTimer() when the OTP is initially sent
        startTimer();
    });
</script> -->


<script>
    function getQueryParam(paramName) {
        const params = new URLSearchParams(window.location.search);
        return params.get(paramName);
    }

    document.addEventListener("DOMContentLoaded", function () {
        const timerElement = document.getElementById("otp-timer");
        const resendButton = document.querySelector(".resend-link");
        
        // Get the email from the URL parameters
        const email = getQueryParam('email');
        
        let timerResetRequested = false; // Flag to track if a timer reset is requested

        function updateTimerDisplay(countdown) {
            timerElement.textContent = `Resend OTP in ${countdown} seconds`;
        }

        function startTimer(countdown) {
            updateTimerDisplay(countdown);
            const timerInterval = setInterval(function () {
                countdown--;
                updateTimerDisplay(countdown);
                if (countdown <= 0) {
                    clearInterval(timerInterval);
                    timerElement.textContent = "Resend OTP";
                    // Enable Resend OTP button
                    resendButton.classList.remove("disabled");
                    // Update the click event listener for Resend OTP
                    resendButton.addEventListener("click", handleResendClick);
                    // Remove countdown from sessionStorage when it reaches 0
                    sessionStorage.removeItem('otpCountdown');
                }
            }, 1000);
        }

        function handleResendClick() {
            resendButton.classList.add("disabled");

            if (timerResetRequested) {
                let countdown = sessionStorage.getItem('otpCountdown');
                if (countdown === null || countdown <= 0) {
                    countdown = 60; 
                }

                startTimer(countdown);
                sessionStorage.setItem('otpCountdown', countdown);
            }


            fetch("/admin/resendOtp", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ email: email }),
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    console.log(data);
                    alert('OTP has been sent successfully!');

                    timerResetRequested = true;
                })
                .catch(error => {
                    console.error('There was a problem with the fetch operation:', error);
                });
        }

        let countdown = sessionStorage.getItem('otpCountdown');
        if (countdown === null || countdown <= 0) {
            countdown = 60; 
        }

        startTimer(countdown);
    });
</script>
